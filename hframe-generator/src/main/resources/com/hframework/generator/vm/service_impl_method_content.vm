##第一部分：传入参数
#set($map=$MAP)
#set($className = $map.get("ClassName"))
#set($varName = $map.get("VarName"))
#set($entityName = $map.get("EntityName"))

##模板内容
    /**
    * 创建${entityName}
    * @param ${varName}
    * @return
    * @throws Exception
    */
    public int create(${className} ${varName}) throws Exception {
        return ${varName}Mapper.insertSelective(${varName});
    }

    /**
    * 批量维护${entityName}
    * @param ${varName}s
    * @return
    * @throws Exception
    */
    public int batchOperate(${className}[] ${varName}s) throws  Exception{
        int result = 0;
        if(${varName}s != null) {
            for (${className} ${varName} : ${varName}s) {
                if(${varName}.get${className}Id() == null) {
                    result += ${varName}Mapper.insertSelective(${varName});
                }else {
                    result += ${varName}Mapper.updateByPrimaryKey(${varName});
                }
            }
        }
        return result;
    }

    /**
    * 更新${entityName}
    * @param ${varName}
    * @return
    * @throws Exception
    */
    public int update(${className} ${varName}) throws  Exception {
        return ${varName}Mapper.updateByPrimaryKeySelective(${varName});
    }

    /**
    * 通过查询对象更新${entityName}
    * @param ${varName}
    * @param example
    * @return
    * @throws Exception
    */
    public int updateByExample(${className} ${varName}, ${className}_Example example) throws  Exception {
        return ${varName}Mapper.updateByExampleSelective(${varName}, example);
    }

    /**
    * 删除${entityName}
    * @param ${varName}
    * @return
    * @throws Exception
    */
    public int delete(${className} ${varName}) throws  Exception {
        return ${varName}Mapper.deleteByPrimaryKey(${varName}.get${className}Id());
    }

    /**
    * 删除${entityName}
    * @param ${varName}Id
    * @return
    * @throws Exception
    */
    public int delete(long ${varName}Id) throws  Exception {
        return ${varName}Mapper.deleteByPrimaryKey(${varName}Id);
    }

    /**
    * 查找所有${entityName}
    * @return
    */
    public List<${className}> get${className}All()  throws  Exception {
        return ${varName}Mapper.selectByExample(new ${className}_Example());
    }

    /**
    * 通过${entityName}ID查询${entityName}
    * @param ${varName}Id
    * @return
    * @throws Exception
    */
    public ${className} get${className}ByPK(long ${varName}Id)  throws  Exception {
        return ${varName}Mapper.selectByPrimaryKey(${varName}Id);
    }

    /**
    * 通过MAP参数查询${entityName}
    * @param params
    * @return
    * @throws Exception
    */
    public List<${className}> get${className}ListByParam(Map<String, Object> params)  throws  Exception {
        return null;
    }



    /**
    * 通过查询对象查询${entityName}
    * @param example
    * @return
    * @throws Exception
    */
    public List<${className}> get${className}ListByExample(${className}_Example example) throws  Exception {
        return ${varName}Mapper.selectByExample(example);
    }

    /**
    * 通过MAP参数查询${entityName}数量
    * @param params
    * @return
    * @throws Exception
    */
    public int get${className}CountByParam(Map<String, Object> params)  throws  Exception {
        return 0;
    }

    /**
    * 通过查询对象查询${entityName}数量
    * @param example
    * @return
    * @throws Exception
    */
    public int get${className}CountByExample(${className}_Example example) throws  Exception {
        return ${varName}Mapper.countByExample(example);
    }

